# Generated by Django 5.2.7 on 2025-10-03 04:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('coops', '0007_alter_konfirmasimagang_status_sertifikatcoop'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Drop old WeeklyReport table
        migrations.DeleteModel(
            name='WeeklyReport',
        ),
        
        # Create new WeeklyReport model
        migrations.CreateModel(
            name='WeeklyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveIntegerField()),
                ('week_start_date', models.DateField()),
                ('week_end_date', models.DateField()),
                ('main_activities', models.TextField(help_text='Aktivitas pencarian magang yang dilakukan minggu ini', verbose_name='Aktivitas Utama')),
                ('target_achievement', models.TextField(help_text='Target yang berhasil dicapai minggu ini', verbose_name='Pencapaian Target')),
                ('companies_applied', models.TextField(help_text='Daftar perusahaan yang sudah dilamar/dihubungi', verbose_name='Perusahaan yang Dilamar')),
                ('interview_status', models.TextField(blank=True, help_text='Update mengenai interview yang sudah/akan dilakukan', verbose_name='Status Interview')),
                ('challenges_faced', models.TextField(blank=True, help_text='Kendala atau tantangan dalam mencari magang', verbose_name='Kendala yang Dihadapi')),
                ('help_needed', models.TextField(blank=True, help_text='Bantuan apa yang dibutuhkan dari admin/mentor', verbose_name='Bantuan yang Diperlukan')),
                ('next_week_plan', models.TextField(help_text='Rencana aktivitas untuk minggu depan', verbose_name='Rencana Minggu Depan')),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='Estimasi progress pencarian magang (0-100%)', verbose_name='Persentase Progress')),
                ('application_status', models.CharField(choices=[('searching', 'Masih Mencari'), ('applied', 'Sudah Melamar'), ('interview_scheduled', 'Interview Dijadwalkan'), ('waiting_response', 'Menunggu Respon'), ('accepted', 'Diterima'), ('rejected', 'Ditolak')], default='searching', max_length=50, verbose_name='Status Aplikasi')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_late', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-week_start_date'],
            },
        ),
        
        # Create DeadlineReminder model
        migrations.CreateModel(
            name='DeadlineReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deadline_date', models.DateField(help_text='Batas waktu untuk mendapatkan tempat magang', verbose_name='Tanggal Deadline')),
                ('reminder_frequency_days', models.PositiveIntegerField(default=7, help_text='Setiap berapa hari reminder dikirim', verbose_name='Frekuensi Reminder (hari)')),
                ('description', models.TextField(help_text='Deskripsi atau instruksi mengenai deadline ini', verbose_name='Deskripsi')),
                ('email_reminder_enabled', models.BooleanField(default=True, help_text='Apakah sistem mengirim email reminder otomatis', verbose_name='Email Reminder Aktif')),
                ('is_active', models.BooleanField(default=True, help_text='Apakah pengaturan reminder ini aktif', verbose_name='Status Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        
        # Add unique constraint
        migrations.AddConstraint(
            model_name='weeklyreport',
            constraint=models.UniqueConstraint(fields=('student', 'week_start_date'), name='coops_weeklyreport_student_week_start_date_uniq'),
        ),
    ]
